{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport * as Permissions from 'expo-permissions';\nimport QRCodeScanner from 'react-native-qrcode-scanner';\nimport { RNCamera } from 'react-native-camera';\nimport { navigate } from \"../navigation/rootNavigation\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar QRscanner = function (_React$Component) {\n  _inherits(QRscanner, _React$Component);\n  var _super = _createSuper(QRscanner);\n  function QRscanner() {\n    var _this;\n    _classCallCheck(this, QRscanner);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      hasCameraPermission: null\n    };\n    _this.getPermissionsAsync = _asyncToGenerator(function* () {\n      var _yield$Permissions$as = yield Permissions.askAsync(Permissions.CAMERA),\n        status = _yield$Permissions$as.status;\n      _this.setState({\n        hasCameraPermission: status == \"granted\"\n      });\n    });\n    _this.handleBarCodeScanned = function (_ref2) {\n      var type = _ref2.type,\n        data = _ref2.data;\n      _this.setState({\n        scanned: true\n      });\n      alert(\"Bar code with type \" + type + \" and data \" + data + \" has been scanned!\");\n    };\n    return _this;\n  }\n  _createClass(QRscanner, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(function* () {\n        this.getPermissionsAsync();\n      });\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n      return componentDidMount;\n    }()\n  }, {\n    key: \"scan\",\n    value: function scan(data) {\n      navigate(\"NewItemTest\", {\n        id: data.data\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hasCameraPermission = this.state.hasCameraPermission;\n      console.warn(hasCameraPermission);\n      if (hasCameraPermission === null) {\n        return _jsx(Text, {\n          children: \" Requesting for camera permission \"\n        });\n      }\n      if (hasCameraPermission === false) {\n        return _jsx(Text, {\n          children: \" No access to camera \"\n        });\n      }\n      return _jsx(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'column',\n          justifyContent: 'flex-end'\n        },\n        children: _jsx(QRCodeScanner, {\n          onRead: this.scan,\n          flashMode: RNCamera.Constants.FlashMode.torch\n        })\n      });\n    }\n  }]);\n  return QRscanner;\n}(React.Component);\nexport { QRscanner as default };","map":{"version":3,"names":["React","Permissions","QRCodeScanner","RNCamera","navigate","QRscanner","state","hasCameraPermission","getPermissionsAsync","askAsync","CAMERA","status","setState","handleBarCodeScanned","type","data","scanned","alert","id","console","warn","flex","flexDirection","justifyContent","scan","Constants","FlashMode","torch","Component"],"sources":["/Users/ethanweilheimer/Find-It/frontend/scanner/QRscanner.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n    Text,\n    View,\n    StyleSheet,\n    Button\n} from 'react-native';\nimport Constants from 'expo-constants';\nimport * as Permissions from 'expo-permissions';\n\nimport QRCodeScanner from 'react-native-qrcode-scanner';\nimport { RNCamera } from 'react-native-camera';\nimport { navigate } from '../navigation/rootNavigation';\n\n\nexport default class QRscanner extends React.Component {\n    state = {\n        hasCameraPermission: null\n    };\n\n    async componentDidMount() {\n        this.getPermissionsAsync();\n    }\n\n    getPermissionsAsync = async () => {\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\n        this.setState({\n            hasCameraPermission: (status == \"granted\")\n        });\n    };\n    scan(data: any) {\n        navigate(\"NewItemTest\", { id: data.data })\n    }\n    render() {\n        const { hasCameraPermission } = this.state;\n        console.warn(hasCameraPermission)\n        if (hasCameraPermission === null) {\n            return (<Text> Requesting for camera permission </Text>);\n        }\n        if (hasCameraPermission === false) {\n            return (<Text> No access to camera </Text>);\n        }\n        return (<View style={\n            {\n                flex: 1,\n                flexDirection: 'column',\n                justifyContent: 'flex-end',\n            }\n        } >\n            \n\n            <QRCodeScanner\n                onRead={this.scan}\n                flashMode={RNCamera.Constants.FlashMode.torch}\n                \n                \n            />\n\n        </View>\n        );\n    }\n\n    handleBarCodeScanned = ({\n        type,\n        data\n    }) => {\n        this.setState({\n            scanned: true\n        });\n        alert(`Bar code with type ${type} and data ${data} has been scanned!`);\n    };\n}"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC;AAAA;AAQ/B,OAAO,KAAKC,WAAW,MAAM,kBAAkB;AAE/C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,QAAQ;AAAuC;AAAA,IAGnCC,SAAS;EAAA;EAAA;EAAA;IAAA;IAAA;IAAA;MAAA;IAAA;IAAA;IAAA,MAC1BC,KAAK,GAAG;MACJC,mBAAmB,EAAE;IACzB,CAAC;IAAA,MAMDC,mBAAmB,qBAAG,aAAY;MAC9B,kCAAyBP,WAAW,CAACQ,QAAQ,CAACR,WAAW,CAACS,MAAM,CAAC;QAAzDC,MAAM,yBAANA,MAAM;MACd,MAAKC,QAAQ,CAAC;QACVL,mBAAmB,EAAGI,MAAM,IAAI;MACpC,CAAC,CAAC;IACN,CAAC;IAAA,MAiCDE,oBAAoB,GAAG,iBAGjB;MAAA,IAFFC,IAAI,SAAJA,IAAI;QACJC,IAAI,SAAJA,IAAI;MAEJ,MAAKH,QAAQ,CAAC;QACVI,OAAO,EAAE;MACb,CAAC,CAAC;MACFC,KAAK,yBAAuBH,IAAI,kBAAaC,IAAI,wBAAqB;IAC1E,CAAC;IAAA;EAAA;EAAA;IAAA;IAAA;MAAA,2CAlDD,aAA0B;QACtB,IAAI,CAACP,mBAAmB,EAAE;MAC9B,CAAC;MAAA;QAAA;MAAA;MAAA;IAAA;EAAA;IAAA;IAAA,OAQD,cAAKO,IAAS,EAAE;MACZX,QAAQ,CAAC,aAAa,EAAE;QAAEc,EAAE,EAAEH,IAAI,CAACA;MAAK,CAAC,CAAC;IAC9C;EAAC;IAAA;IAAA,OACD,kBAAS;MACL,IAAQR,mBAAmB,GAAK,IAAI,CAACD,KAAK,CAAlCC,mBAAmB;MAC3BY,OAAO,CAACC,IAAI,CAACb,mBAAmB,CAAC;MACjC,IAAIA,mBAAmB,KAAK,IAAI,EAAE;QAC9B,OAAQ,KAAC,IAAI;UAAA,UAAC;QAAkC,EAAO;MAC3D;MACA,IAAIA,mBAAmB,KAAK,KAAK,EAAE;QAC/B,OAAQ,KAAC,IAAI;UAAA,UAAC;QAAqB,EAAO;MAC9C;MACA,OAAQ,KAAC,IAAI;QAAC,KAAK,EACf;UACIc,IAAI,EAAE,CAAC;UACPC,aAAa,EAAE,QAAQ;UACvBC,cAAc,EAAE;QACpB,CACH;QAAA,UAGG,KAAC,aAAa;UACV,MAAM,EAAE,IAAI,CAACC,IAAK;UAClB,SAAS,EAAErB,QAAQ,CAACsB,SAAS,CAACC,SAAS,CAACC;QAAM;MAGhD,EAEC;IAEX;EAAC;EAAA;AAAA,EA7CkC3B,KAAK,CAAC4B,SAAS;AAAA,SAAjCvB,SAAS"},"metadata":{},"sourceType":"module"}